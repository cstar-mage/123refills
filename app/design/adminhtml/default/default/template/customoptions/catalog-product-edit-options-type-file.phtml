<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script type="text/javascript">

OptionTemplateFile = '<table class="border" cellpadding="0" cellspacing="0">'+
        '<tr class="headings">'+
            <?php if (Mage::helper('customoptions')->isDependentEnabled()) { ?>'<th class="type-id"><?php echo $this->jsQuoteEscape(Mage::helper('customoptions')->__('Id')) ?></th>'+<?php } ?>
            '<th class="type-price"><?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('Price')) ?></th>'+
            '<th class="type-type"><?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('Price Type')) ?></th>'+
            '<th class="type-sku"><?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('SKU')) ?></th>'+
            '<th class="type-title"><?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('Allowed File Extensions')) ?></th>'+
            '<th class="last"><?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('Maximum Image Size')) ?></th>'+
            '<th class="last"></th>'+
        '</tr>'+
        '<tr>'+
            <?php if (Mage::helper('customoptions')->isDependentEnabled()) { ?>'<td align="center">{{in_group_id_view}}</td>'+<?php } ?>
            '<td><input class="input-text type="text" name="product[options][{{option_id}}][price]" value="{{price}}"></td>'+
            '<td><?php echo $this->jsQuoteEscape($this->getPriceTypeSelectHtml()) ?></td>'+
            '<td><input type="text" class="input-text" name="product[options][{{option_id}}][sku]" value="{{sku}}"></td>'+
            '<td><input class="input-text" type="text" name="product[options][{{option_id}}][file_extension]" value="{{file_extension}}"></td>'+
            '<td class="type-last" nowrap><input class="input-text" type="text" name="product[options][{{option_id}}][image_size_x]" value="{{image_size_x}}"> <?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('x')) ?> <input class="input-text" type="text" name="product[options][{{option_id}}][image_size_y]" value="{{image_size_y}}"> <?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('px.')) ?><br/><?php echo $this->jsQuoteEscape(Mage::helper('catalog')->__('leave blank if its not an image')) ?></td>'+
            '<td class="type-last last"><span title="Add image"><?php echo $this->jsQuoteEscape($this->getAddImageButtonHtml()) ?></span></td>'+
        '</tr>'+
        '<tr id="file_option_row_{{option_id}}"><td colspan="9">{{image}}</td></tr>'+
        '<tr><td colspan="9"><div id="file-upload-{{option_id}}"></div></td></tr>'+        
    '</table>'+
    '<input type="hidden" class="igi" id="product_option_{{option_id}}_in_group_id" name="product[options][{{option_id}}][in_group_id]" value="{{in_group_id}}"/>';

productOptionTypeFile = {
        div : 'option_1',
        itemCount : 0,
        templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
        templateText : OptionTemplateFile,
        add : function(data) {
            this.template = new Template(this.templateText, this.templateSyntax);

            if (data.target || data.srcElement) {//data is Event (work in IE and Firefox)
                element = $(Event.findElement(data, 'button'));
                optionId = element.readAttribute('id').sub('add_select_row_button_', '');
                data = {};
                data.option_type_id = '-1';
                data.select_id = this.itemCount;
            } else {
                optionId = data.option_id;
                data.select_id = data.option_type_id;
                this.itemCount = data.item_count;
            }

            data.id  = optionId;

            Element.insert($(this.div+'_'+data.id), {'bottom':this.template.evaluate(data)});

            if (data.checkboxScopeTitle) {
                //set disabled
                if ($('product_option_'+data.id+'_select_'+data.select_id+'_title') && data.scopeTitleDisabled) {
                    $('product_option_'+data.id+'_select_'+data.select_id+'_title').disable();
                }
            }
            if (data.checkboxScopePrice) {
                //set disabled
                if ($('product_option_'+data.id+'_select_'+data.select_id+'_price') && data.scopePriceDisabled) {
                    $('product_option_'+data.id+'_select_'+data.select_id+'_price').disable();
                    $('product_option_'+data.id+'_select_'+data.select_id+'_price_type').disable();
                }
            }

            if (data.price_type) {
                $A($('product_option_'+data.id+'_select_'+data.select_id+'_price_type').options).each(function(option){
                    if (option.value==data.price_type) option.selected = true;
                });
            }

            this.itemCount++;
            this.bindRemoveButtons();
        },
        remove : function(event){
            var element = $(Event.findElement(event, 'tr'));

            if(element){
                $(element.readAttribute('id')+'_is_delete').value = '1';
                $(element).addClassName('no-display');
                $(element).addClassName('ignore-validate');
                element.hide();
            }
        },
        bindRemoveButtons : function(){
            var buttons = $$('.delete-select-row');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        },
        bindAddButton : function()
        {
            var buttons = $$('.add-select-row');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.add.bind(this));
                }
            }
        },
        createFileField: function(strId) {
            var id = strId.split('-');
            var tpl = '<table class="customoptions-file-row" cellspacing="0" cellpadding="0"><tr>'+
                '<td><input class="input-file" type="file" name="file_'+ id[3] +'" value="" /></td>'+
                '<td class="td-button"><span title="<?php echo $this->htmlEscape($this->__('Hide')) ?>">'+
                '<button type="button" onclick="productOptionTypeFile.cleanFileRow(\''+ id[3] +'\')" class="delete delete-select-row icon-btn"><span><?php echo $this->jsQuoteEscape($this->__('Hide')) ?></span></button></span></td>'+
                '</tr></table>';
            var field = $('file-upload-'+ id[3]);
            if (field) {
                field.update(tpl);
            }
        },
        cleanFileRow: function(optionId) {
		var fileRow = $('file-upload-'+ optionId);
            if (fileRow) {
        	fileRow.update('');
            }
	}
    }

if ($('option_panel_type_file')) {
    $('option_panel_type_file').remove();
}

</script>
